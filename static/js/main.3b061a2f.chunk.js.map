{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","Errorboundry.js","Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardloop","map","user","i","SearchBox","searchfield","searchchange","type","placeholder","onChange","Errorboundry","props","state","hasError","error","info","this","setState","children","Component","Scroll","style","overflow","height","App","onsearch","event","Searchfield","target","value","fetch","then","response","json","users","robofilter","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAgBeA,EAdF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,GAC3B,OACC,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAM,OAAOC,IAAG,+BAA2BH,EAA3B,cACtB,gCACG,mCAAMF,EAAN,OACA,kCAAKC,EAAL,cCaSK,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACbC,EAAWD,EAAOE,KAAI,SAACC,EAAMC,GAClC,OACC,cAAC,EAAD,CACAT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAASM,EAAOI,GAAGV,OAHRU,MAQb,OACA,8BACKH,KCDSI,EAZG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC/B,OACC,qBAAKX,UAAY,MAAjB,SACA,uBACCA,UAAY,mCACZY,KAAO,SAASC,YAAc,gBAC9BC,SAAYH,OCeDI,G,wDArBd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACZC,UAAU,GAHO,E,qDAOnB,SAAkBC,EAAQC,GACzBC,KAAKC,SAAS,CAAEJ,UAAS,M,oBAKzB,WACC,OAAGG,KAAKJ,MAAMC,SACN,kDAEDG,KAAKL,MAAMO,a,GAlBMC,cCSZC,EATA,SAACT,GACf,OACC,qBAAKU,MAAS,CAACC,SAAU,SAASC,OAAO,SAAzC,SACEZ,EAAMO,YC6DKM,E,kDApDb,aAAe,IAAD,8BACZ,gBAoBDC,SAAW,SAACC,GACX,EAAKT,SAAS,CAAEU,YAAaD,EAAME,OAAOC,SApB1C,EAAKjB,MAAQ,CACXb,OAAQ,GACR4B,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBG,MAAM,8CACDC,MAAM,SAAAC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJ,EAAKjB,SAAS,CAAClB,OAAQmC,S,oBAc7B,WAAU,IAAD,OACCC,EAAanB,KAAKJ,MAAMb,OAAOqC,QAAO,SAAArC,GAC1C,OAAOA,EAAOP,KAAK6C,cAAcC,SAAS,EAAK1B,MAAMe,YAAYU,kBAEnE,OAAgC,IAA7BrB,KAAKJ,MAAMb,OAAOwC,OACZ,2CAGL,sBAAK5C,UAAY,KAAjB,UACE,oBAAIA,UAAY,KAAhB,2BACA,cAAC,EAAD,CAAWW,aAAgBU,KAAKS,WAChC,cAAC,EAAD,UACE,cAAC,EAAD,UACC,cAAC,EAAD,CAAU1B,OAAUoC,e,GA1CnBhB,aCDHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.3b061a2f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) =>{\r\n\treturn(\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t \t\t<img alt = 'robo' src ={`https://robohash.org/${id}?200*200`} /> \r\n\t\t\t<div>\r\n\t\t  \t\t<h2> {name} </h2>\r\n\t\t  \t\t<p> {email} </p>\r\n\t\t\t </div> \r\n\t\t</div>\r\n\r\n\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\tconst cardloop = robots.map((user, i) => {\r\n\t\treturn(\r\n\t\t\t<Card key={i} \r\n\t\t\tid={robots[i].id} \r\n\t\t\tname={robots[i].name}\r\n\t\t\temail = {robots[i].email}\r\n\t\t\t/>\r\n\t\t); \r\n\r\n\t})\r\n\treturn(\r\n\t<div>\r\n    \t{cardloop}\r\n    </div>\t\r\n\t\t);\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\n\r\nconst SearchBox = ({searchfield, searchchange}) => {\r\n\t return (\r\n\t\t <div className = 'pa2'>\r\n\t\t\t<input \r\n\t\t\t className = 'pa3 ba b--green bg-lightest-blue'\r\n\t\t\t type = 'search' placeholder = 'search robots'\r\n\t\t\t onChange = {searchchange}\r\n\t\t\t/>\r\n\t\t </div>\r\n\t\t);\r\n      }\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\n\r\nclass Errorboundry extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error , info){\r\n\t\tthis.setState({ hasError:true })\r\n\t}\r\n\r\n\r\n\r\n\t\trender(){\r\n\t\t\tif(this.state.hasError){\r\n\t\t\t\treturn <h1> ERROR DETECTED </h1>\r\n\t\t\t}\r\n\t\t\treturn this.props.children\r\n\t\t}\r\n}\r\n\r\nexport default Errorboundry;\t","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n\treturn(\r\n\t\t<div style = {{overflow: 'scroll',height:'800px' }}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\nimport './App.css';\r\nimport Errorboundry from './Errorboundry';\r\nimport Scroll from './Scroll';\r\n\r\n\r\n// const state = {\r\n//   robots: robots,\r\n//   Searchfield: ''\r\n// }\r\n\r\nclass App extends Component {\r\n  constructor (){\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      Searchfield: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then (response=> {\r\n          return response.json();\r\n        })\r\n        .then(users=>{\r\n          this.setState({robots: users})\r\n        })\r\n  }\r\n\r\n\r\n\r\n\r\n   onsearch = (event) => {\r\n    this.setState({ Searchfield: event.target.value })\r\n    }\r\n  \r\n\r\n\r\n\r\n    render() {\r\n        const robofilter = this.state.robots.filter(robots => {\r\n          return robots.name.toLowerCase().includes(this.state.Searchfield.toLowerCase())\r\n        })\r\n        if(this.state.robots.length === 0){\r\n          return <h1> LOADING </h1>\r\n        } else{ \r\n           return(\r\n            <div className = 'tc'>\r\n              <h1 className = 'f1'> Robofriends </h1>\r\n              <SearchBox searchchange = {this.onsearch} />\r\n              <Scroll>\r\n                <Errorboundry>\r\n                 <CardList robots = {robofilter} />\r\n                </Errorboundry>\r\n              </Scroll>  \r\n            </div>\r\n\r\n          );\r\n        } \r\n      }\r\n    }\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}